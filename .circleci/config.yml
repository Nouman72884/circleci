version: 2.1
jobs:
  test:
    docker:
      - image: python:3.7.1
    steps:
      - checkout
  build:
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add py-pip
            pip install awscli
      - run: 
          name: Build image and push
          command: |
            aws configure set region us-east-1 --profile credentials
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile credentials
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile credentials 
            REGION="us-east-1"
            ECR_URL="020046395185.dkr.ecr.$REGION.amazonaws.com/circleci-demo"
            BUILD_NUMBER="${BUILD_NUMBER:-$(date +%s)}"
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 020046395185.dkr.ecr.us-east-1.amazonaws.com
            docker build -t $ECR_URL:latest .
            docker push $ECR_URL:latest      
  deploy:
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add py-pip
            pip install awscli
      - run: 
          name: register task-def
          command: |
            aws ecs register-task-definition --cli-input-json file://task-definition.json

  service:
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add py-pip
            pip install awscli
      - run: 
          name: create service
          command: |
            aws ecs create-service --cli-input-json file://service.json

workflows:
  version: 2.1
  build_and_deploy:
    jobs:
      - test
      - build:
          context: Env
          requires:
            - test
          filters:
            branches:
              only: dev
      - deploy:
          context: Env
          requires:
            - build
          filters:
            branches:
              only: dev
      - service:
          context: Env
          requires:
            - deploy
          filters:
            branches:
              only: dev