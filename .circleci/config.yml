version: 2.1
jobs:
  init-plan:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            cd environment
            terraform init 
            terraform plan --var-file=dev.tfvars

  apply:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform
          command: |
            cd environment
            terraform init
            terraform apply --var-file=dev.tfvars

  build:
    docker:
      - image: alpine
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12
      - run:
          name: Install dependencies
          command: |
            apk add docker-cli
            apk add py-pip
            pip install awscli
      - run: 
          name: Build image and push
          command: | 
            REGION="us-east-1"
            ECR_URL="020046395185.dkr.ecr.$REGION.amazonaws.com/circleci-demo"
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 020046395185.dkr.ecr.us-east-1.amazonaws.com
            docker build -t $ECR_URL:$CIRCLE_SHA1 .
            docker push $ECR_URL:$CIRCLE_SHA1 
            
      - run: 
          name: create task-definition
          command: |
            sed -i -e "s/TAG/$CIRCLE_SHA1/g" task-definition.json
            aws ecs register-task-definition --cli-input-json file://task-definition.json
      - run: 
          name: create service
          command: |
            aws ecs create-service --cli-input-json file://service.json          
workflows:
  version: 2.1
  plan_approve_apply_master:
    jobs:
      - init-plan:
          context: prod
          filters:
            branches:
              only: 
                - master
      - hold-apply:
          type: approval
          requires:
            - init-plan
      - apply:
          context: prod
          filters:
            branches:
              only: 
                - master
          requires:
            - hold-apply
      - build:
          context: prod
          filters:
            branches:
              only: 
                - master
          requires:
            - apply

  plan_approve_apply_dev:
    jobs:
      - init-plan:
          context: dev
          filters:
            branches:
              only: 
                - dev
      - hold-apply:
          type: approval
          requires:
            - init-plan
      - apply:
          context: dev
          filters:
            branches:
              only: 
                - dev
          requires:
            - hold-apply
      - build:
          context: dev
          filters:
            branches:
              only: 
                - dev
          requires:
            - apply

  
      
                